services:
  mariadb:
    image: mariadb:10.11.13
    container_name: blog4-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-blog4}
      MYSQL_USER: ${MYSQL_USER:-blog4user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-blog4password}
    ports:
      - "3306:3306"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: blog4-backend
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      # Database configuration
      DATABASE_USER: ${MYSQL_USER:-blog4user}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD:-blog4password}
      DATABASE_HOST: mariadb
      DATABASE_PORT: 3306
      DATABASE_DB: ${MYSQL_DATABASE:-blog4}
      
      # Application configuration
      BLOG_PORT: 8181
      LOCAL_DEV: true
      ADMIN_USER: admin
      ADMIN_PW: password

      # S3 configuration (using MinIO for local dev)
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-minioadmin}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-minioadmin}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ATTACHMENTS_BUCKET_NAME: ${S3_ATTACHMENTS_BUCKET_NAME:-blog4-attachments}
      S3_BACKUP_BUCKET_NAME: ${S3_BACKUP_BUCKET_NAME:-blog4-backup}
      S3_ENDPOINT: ${S3_ENDPOINT:-minio:9000}
      
      # Other optional configuration
      AMAZON_PAAPI5_ACCESS_KEY: ${AMAZON_PAAPI5_ACCESS_KEY:-}
      AMAZON_PAAPI5_SECRET_KEY: ${AMAZON_PAAPI5_SECRET_KEY:-}
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY:-}
      WEBACCEL_GUARD: ${WEBACCEL_GUARD:-}
      KEEP_ALIVE_URL: ${KEEP_ALIVE_URL:-}
      HUB_URLS: ${HUB_URLS:-}
      TIMEZONE_OFFSET: ${TIMEZONE_OFFSET:-32400}
    ports:
      - "8181:8181"
    volumes:
      - .:/app
      - go_modules:/go/pkg/mod
    working_dir: /app
    command: air

  frontend:
    image: node:22-alpine
    container_name: blog4-frontend
    restart: unless-stopped
    working_dir: /app
    environment:
      NODE_ENV: development
    ports:
      - "6173:6173"
    volumes:
      - ./web/admin:/app
      - node_modules:/app/node_modules
    command: sh -c "npm install && npm run dev -- --port 6173 --host 0.0.0.0"
    depends_on:
      - backend

  minio:
    image: minio/minio:latest
    container_name: blog4-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:latest
    container_name: blog4-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/blog4-attachments || true;
      /usr/bin/mc mb myminio/blog4-backup || true;
      /usr/bin/mc anonymous set public myminio/blog4-attachments;
      exit 0;
      "

volumes:
  mariadb_data:
  go_modules:
  node_modules:
  minio_data: