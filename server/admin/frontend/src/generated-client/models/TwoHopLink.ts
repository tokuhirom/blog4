/* tslint:disable */
/* eslint-disable */
/**
 * Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntryWithImage } from './EntryWithImage';
import {
    EntryWithImageFromJSON,
    EntryWithImageFromJSONTyped,
    EntryWithImageToJSON,
    EntryWithImageToJSONTyped,
} from './EntryWithImage';
import type { EntryWithDestTitle } from './EntryWithDestTitle';
import {
    EntryWithDestTitleFromJSON,
    EntryWithDestTitleFromJSONTyped,
    EntryWithDestTitleToJSON,
    EntryWithDestTitleToJSONTyped,
} from './EntryWithDestTitle';

/**
 * 
 * @export
 * @interface TwoHopLink
 */
export interface TwoHopLink {
    /**
     * 
     * @type {EntryWithDestTitle}
     * @memberof TwoHopLink
     */
    src: EntryWithDestTitle;
    /**
     * 
     * @type {Array<EntryWithImage>}
     * @memberof TwoHopLink
     */
    links: Array<EntryWithImage>;
}

/**
 * Check if a given object implements the TwoHopLink interface.
 */
export function instanceOfTwoHopLink(value: object): value is TwoHopLink {
    if (!('src' in value) || value['src'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    return true;
}

export function TwoHopLinkFromJSON(json: any): TwoHopLink {
    return TwoHopLinkFromJSONTyped(json, false);
}

export function TwoHopLinkFromJSONTyped(json: any, ignoreDiscriminator: boolean): TwoHopLink {
    if (json == null) {
        return json;
    }
    return {
        
        'src': EntryWithDestTitleFromJSON(json['src']),
        'links': ((json['links'] as Array<any>).map(EntryWithImageFromJSON)),
    };
}

export function TwoHopLinkToJSON(json: any): TwoHopLink {
    return TwoHopLinkToJSONTyped(json, false);
}

export function TwoHopLinkToJSONTyped(value?: TwoHopLink | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'src': EntryWithDestTitleToJSON(value['src']),
        'links': ((value['links'] as Array<any>).map(EntryWithImageToJSON)),
    };
}

