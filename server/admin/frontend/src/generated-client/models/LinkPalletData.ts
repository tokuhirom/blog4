/* tslint:disable */
/* eslint-disable */
/**
 * Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntryWithImage } from './EntryWithImage';
import {
    EntryWithImageFromJSON,
    EntryWithImageFromJSONTyped,
    EntryWithImageToJSON,
    EntryWithImageToJSONTyped,
} from './EntryWithImage';
import type { TwoHopLink } from './TwoHopLink';
import {
    TwoHopLinkFromJSON,
    TwoHopLinkFromJSONTyped,
    TwoHopLinkToJSON,
    TwoHopLinkToJSONTyped,
} from './TwoHopLink';

/**
 * 
 * @export
 * @interface LinkPalletData
 */
export interface LinkPalletData {
    /**
     * Array of potential new link titles
     * @type {Array<string>}
     * @memberof LinkPalletData
     */
    newLinks: Array<string>;
    /**
     * Array of directly linked entries
     * @type {Array<EntryWithImage>}
     * @memberof LinkPalletData
     */
    links: Array<EntryWithImage>;
    /**
     * Array of two-hop link relationships
     * @type {Array<TwoHopLink>}
     * @memberof LinkPalletData
     */
    twohops: Array<TwoHopLink>;
}

/**
 * Check if a given object implements the LinkPalletData interface.
 */
export function instanceOfLinkPalletData(value: object): value is LinkPalletData {
    if (!('newLinks' in value) || value['newLinks'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('twohops' in value) || value['twohops'] === undefined) return false;
    return true;
}

export function LinkPalletDataFromJSON(json: any): LinkPalletData {
    return LinkPalletDataFromJSONTyped(json, false);
}

export function LinkPalletDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkPalletData {
    if (json == null) {
        return json;
    }
    return {
        
        'newLinks': json['newLinks'],
        'links': ((json['links'] as Array<any>).map(EntryWithImageFromJSON)),
        'twohops': ((json['twohops'] as Array<any>).map(TwoHopLinkFromJSON)),
    };
}

export function LinkPalletDataToJSON(json: any): LinkPalletData {
    return LinkPalletDataToJSONTyped(json, false);
}

export function LinkPalletDataToJSONTyped(value?: LinkPalletData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'newLinks': value['newLinks'],
        'links': ((value['links'] as Array<any>).map(EntryWithImageToJSON)),
        'twohops': ((value['twohops'] as Array<any>).map(TwoHopLinkToJSON)),
    };
}

