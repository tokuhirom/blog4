// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: visibility.sql

package admindb

import (
	"context"
	"database/sql"
)

const getEntryVisibility = `-- name: GetEntryVisibility :one
SELECT visibility, published_at
FROM entry
WHERE path = ? FOR UPDATE
`

type GetEntryVisibilityRow struct {
	Visibility  EntryVisibility
	PublishedAt sql.NullTime
}

func (q *Queries) GetEntryVisibility(ctx context.Context, path string) (GetEntryVisibilityRow, error) {
	row := q.db.QueryRowContext(ctx, getEntryVisibility, path)
	var i GetEntryVisibilityRow
	err := row.Scan(&i.Visibility, &i.PublishedAt)
	return i, err
}

const updatePublishedAt = `-- name: UpdatePublishedAt :exec
UPDATE entry
SET published_at = NOW()
WHERE path = ? AND published_at IS NULL
`

func (q *Queries) UpdatePublishedAt(ctx context.Context, path string) error {
	_, err := q.db.ExecContext(ctx, updatePublishedAt, path)
	return err
}

const updateVisibility = `-- name: UpdateVisibility :exec
UPDATE entry
SET visibility = ?
WHERE path = ?
`

type UpdateVisibilityParams struct {
	Visibility EntryVisibility
	Path       string
}

func (q *Queries) UpdateVisibility(ctx context.Context, arg UpdateVisibilityParams) error {
	_, err := q.db.ExecContext(ctx, updateVisibility, arg.Visibility, arg.Path)
	return err
}
